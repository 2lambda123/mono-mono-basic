2007-05-21  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/Conversions/ConversionExpression.vb,
	  Expressions/MemberAccessExpression.vb,
	  Expressions/BinaryExpressions/Is_IsNotExpression.vb,
	  Statements/ReturnStatement.vb: Short-circuit resolution.
	* Tokens/IdentifierOrKeyword.vb: Remove comment.
	* Resources/Source.xml, Resources/Errors.resx, General/Messages.vb:
	  Update.
	* General/Resources.vb: Add error handling.
	* General/Report.vb: Remove a few unused methods and make SaveMessage
	  return a boolean indicating whether the message is an warning or
	  not.
	* General/Compiler.vb: Show saved messages during commandline parsing.
	* General/CommandLine.vb: GetFullPaths: don't show any errors here.
	  Don't use Directory.GetFiles unless it's a pattern. AddFile: show
	  error if no file was found and it's not a file pattern.

2007-05-20  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Interfaces/IIntegralLiteralToken.vb, Interfaces/ILiteralToken.vb,
	  Enums/TypeCharactersEnumString.vb,
	  Enums/BuiltInDataTypeEnumStringAttribute.vb,
	  Members/ConstantMemberDeclaration.vb,
	  Members/ConstructorMember.MemberConstructorInfo.vb,
	  Tokens/DecimalLiteralToken.vb, Tokens/IntegralLiteralToken.vb,
	  Tokens/IdentifierToken.vb, Tokens/StringLiteralToken.vb,
	  Tokens/KeywordToken.vb, Tokens/EndOfCodeToken.vb,
	  Tokens/FloatingPointLiteralToken.vb, Tokens/DateLiteralToken.vb,
	  Tokens/CharLiteralToken.vb, Tokens/EndOfFileToken.vb,
	  Tokens/LiteralToken.vb, Tokens/EndOfLineToken.vb, Tokens/SymbolToken.vb,
	  Tokens/CommandLineSpan.vb, Types/MemberImplementsClauses.vb: Removed, no
	  longer necessary.
	* Enums/ModifierMasks.vb, Enums/TokenType.vb: Added.
	* Members/Modifiers.vb, Tokens/Token.vb, Tokens/Span.vb: Changed to a
	  structure.
	* The rest: Required changes due to changing types from class to structure.

2007-05-19  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Members/Modifiers.vb, Tokens/Token.vb, Tokens/Span.vb: Changed to a
	  structure.
	* Enums/ModifierMasks.vb, Enums/TokenType.vb: Added.
	* Tokens/IdentifierToken.vb, Tokens/IntegralLiteralToken.vb,
	  Tokens/KeywordToken.vb, Tokens/LiteralToken.vb,
	  Tokens/DateLiteralToken.vb, Tokens/StringLiteralToken.vb,
	  Tokens/SymbolToken.vb, Tokens/FloatingPointLiteralToken.vb,
	  Tokens/EndOfLineToken.vb, Interfaces/ILiteralToken.vb,
	  Members/ConstantMemberDeclaration.vb, Tokens/CharLiteralToken.vb,
	  Tokens/CommandLineSpan.vb,
	  Members/ConstructorMember.MemberConstructorInfo.vb,
	  Tokens/DecimalLiteralToken.vb, Tokens/EndOfCodeToken.vb,
	  Tokens/EndOfFileToken.vb, Interfaces/IIntegralLiteralToken.vb,
	  Enums/TypeCharactersEnumString.vb,
	  Enums/BuiltInDataTypeEnumStringAttribute.vb,
	  Types/MemberImplementsClauses.vb: Deleted, not needed anymore.
	* The rest: Changes required by changing types from class to structure.

2007-05-18  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Statements/AddOrRemoveHandlerStatement.vb: Small fix for using
	  variables in event handler statements.

2007-05-13  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* vbnc.vbproj: Updated.

2007-05-13  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* vbnc.vbproj: Updated.

2007-05-12  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* vbnc.vbproj: Updated.

2007-05-12  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* vbnc.vbproj: Updated.

2007-05-12  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/BooleanLiteralExpression.vb,
	  Expressions/TypeOfExpression.vb,
	  Expressions/UnaryExpressions/UnaryMinusExpression.vb,
	  Expressions/UnaryExpressions/UnaryExpression.vb,
	  Expressions/UnaryExpressions/UnaryNotExpression.vb,
	  Expressions/UnaryExpressions/UnaryPlusExpression.vb,
	  Expressions/GetRefExpression.vb, Expressions/GetTypeExpression.vb,
	  Expressions/Conversions/CSByteExpression.vb,
	  Expressions/Conversions/CSngExpression.vb,
	  Expressions/Conversions/CIntExpression.vb,
	  Expressions/Conversions/CDecExpression.vb,
	  Expressions/Conversions/CBoolExpression.vb,
	  Expressions/Conversions/CShortExpression.vb,
	  Expressions/Conversions/CDblExpression.vb,
	  Expressions/Conversions/CByteExpression.vb,
	  Expressions/Conversions/CULngExpression.vb,
	  Expressions/Conversions/CStrExpression.vb,
	  Expressions/Conversions/CObjExpression.vb,
	  Expressions/Conversions/CDateExpression.vb,
	  Expressions/Conversions/CCharExpression.vb,
	  Expressions/Conversions/CUIntExpression.vb,
	  Expressions/Conversions/CLngExpression.vb,
	  Expressions/Conversions/CTypeExpression.vb,
	  Expressions/Conversions/CUShortExpression.vb,
	  Expressions/MemberAccessExpression.vb,
	  Expressions/BinaryExpressions/LShiftExpression.vb,
	  Expressions/BinaryExpressions/OrElseExpression.vb,
	  Expressions/BinaryExpressions/EqualsExpression.vb,
	  Expressions/BinaryExpressions/GEExpression.vb,
	  Expressions/BinaryExpressions/BinaryAddExpression.vb,
	  Expressions/BinaryExpressions/BinarySubExpression.vb,
	  Expressions/BinaryExpressions/IntDivisionExpression.vb,
	  Expressions/BinaryExpressions/RShiftExpression.vb,
	  Expressions/BinaryExpressions/LEExpression.vb,
	  Expressions/BinaryExpressions/ExponentExpression.vb,
	  Expressions/BinaryExpressions/AndExpression.vb,
	  Expressions/BinaryExpressions/ConcatExpression.vb,
	  Expressions/BinaryExpressions/XorExpression.vb,
	  Expressions/BinaryExpressions/GTExpression.vb,
	  Expressions/BinaryExpressions/NotEqualsExpression.vb,
	  Expressions/BinaryExpressions/LTExpression.vb,
	  Expressions/BinaryExpressions/ModExpression.vb,
	  Expressions/BinaryExpressions/OrExpression.vb,
	  Expressions/BinaryExpressions/AndAlsoExpression.vb,
	  Expressions/BinaryExpressions/MultExpression.vb,
	  Expressions/BinaryExpressions/LikeExpression.vb,
	  Expressions/BinaryExpressions/BinaryExpression.vb,
	  Expressions/BinaryExpressions/Is_IsNotExpression.vb,
	  Expressions/BinaryExpressions/RealDivisionExpression.vb,
	  Expressions/InvocationOrIndexExpression.vb,
	  Expressions/ArrayCreationExpression.vb, Expressions/Expression.vb,
	  Expressions/DictionaryAccessExpression.vb,
	  Expressions/DelegateOrObjectCreationExpression.vb,
	  Expressions/Classifications/MethodGroupClassification.vb,
	  Expressions/Classifications/ExpressionClassification.vb,
	  Expressions/Classifications/LateBoundAccessClassification.vb,
	  Expressions/Classifications/MethodPointerClassification.vb,
	  Expressions/Classifications/VariableClassification.vb,
	  Enums/TypeCharacters.vb, Statements/ForStatement.vb,
	  Statements/IfStatement.vb, Statements/UsingDeclarator.vb,
	  Statements/EndStatement.vb, Statements/ElseIfStatement.vb,
	  Statements/CallStatement.vb, Statements/CatchStatement.vb,
	  Statements/CaseClause.vb, Statements/UsingStatement.vb,
	  Statements/SyncLockStatement.vb, Statements/StopStatement.vb,
	  Statements/OnErrorStatement.vb, Statements/ErrorStatement.vb,
	  Statements/ResumeStatement.vb,
	  Statements/AssignStatements/AssignmentStatement.vb,
	  Statements/AssignStatements/MidAssignStatement.vb,
	  Statements/DoStatement.vb, Statements/ForEachStatement.vb,
	  Statements/RedimClause.vb, Statements/WhileStatement.vb,
	  Members/ConstantDeclaration.vb, Members/MethodResolver.vb,
	  Members/RegularEventHandlerDeclaration.vb, Members/SubSignature.vb,
	  Members/FunctionSignature.vb, Members/Parameter.vb,
	  Members/ConstructorDeclaration.vb,
	  Members/ArrayElementInitializer.vb, Members/VariableDeclaration.vb,
	  Emit/Emitter.vb, Descriptors/ArrayTypeDescriptor.vb,
	  Descriptors/TypeDescriptor.vb,
	  Descriptors/TypeParameterDescriptor.vb,
	  Descriptors/FieldDescriptor.vb,
	  ConditionalCompilation/ConditionalConstant.vb,
	  ConditionalCompilation/ConditionalExpression.vb, Code/CodeBlock.vb,
	  TypeDeclarations/EnumDeclaration.vb,
	  TypeDeclarations/ClassDeclaration.vb,
	  TypeDeclarations/ModuleDeclaration.vb,
	  TypeDeclarations/DelegateDeclaration.vb,
	  TypeDeclarations/AssemblyDeclaration.vb,
	  TypeDeclarations/StructureDeclaration.vb,
	  TypeDeclarations/TypeDeclaration.vb, General/Helper.vb,
	  General/AssemblyInfo.vb, General/TypeResolution.vb,
	  General/TypeCache.vb, General/Compiler.vb, General/TypeManager.vb,
	  General/MethodBaseDeclaration.vb, General/MemberCache.vb,
	  General/NameResolution.vb: Refactored TypeCache, renaming cached
	  methods and types in a consistent way.
	* General/TypeCache.in: Added.

2007-05-08  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Parser/Parser(Statements).vb: Accept grammar MS accepts as well
	  (ElseIf can be written as Else If).

2007-05-08  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Types/TokenManager.vb: When accepting newlines accept as many as
	  possible.

2007-05-06  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/PropertyGroupToPropertyAccessExpression.vb,
	  Expressions/UnaryExpressions/UnaryMinusExpression.vb,
	  Expressions/UnaryExpressions/UnaryExpression.vb,
	  Expressions/UnaryExpressions/UnaryNotExpression.vb,
	  Expressions/GetRefExpression.vb,
	  Expressions/Conversions/CSByteExpression.vb,
	  Expressions/Conversions/CSngExpression.vb,
	  Expressions/Conversions/CIntExpression.vb,
	  Expressions/Conversions/CBoolExpression.vb,
	  Expressions/Conversions/CDecExpression.vb,
	  Expressions/Conversions/CShortExpression.vb,
	  Expressions/Conversions/CDblExpression.vb,
	  Expressions/Conversions/CByteExpression.vb,
	  Expressions/Conversions/CULngExpression.vb,
	  Expressions/Conversions/CStrExpression.vb,
	  Expressions/Conversions/CObjExpression.vb,
	  Expressions/Conversions/CCharExpression.vb,
	  Expressions/Conversions/CDateExpression.vb,
	  Expressions/Conversions/CUIntExpression.vb,
	  Expressions/Conversions/CLngExpression.vb,
	  Expressions/Conversions/CTypeExpression.vb,
	  Expressions/Conversions/CUShortExpression.vb,
	  Expressions/BoxExpression.vb,
	  Expressions/BinaryExpressions/OrElseExpression.vb,
	  Expressions/BinaryExpressions/LShiftExpression.vb,
	  Expressions/BinaryExpressions/EqualsExpression.vb,
	  Expressions/BinaryExpressions/GEExpression.vb,
	  Expressions/BinaryExpressions/BinaryAddExpression.vb,
	  Expressions/BinaryExpressions/BinarySubExpression.vb,
	  Expressions/BinaryExpressions/RShiftExpression.vb,
	  Expressions/BinaryExpressions/IntDivisionExpression.vb,
	  Expressions/BinaryExpressions/LEExpression.vb,
	  Expressions/BinaryExpressions/AndExpression.vb,
	  Expressions/BinaryExpressions/XorExpression.vb,
	  Expressions/BinaryExpressions/GTExpression.vb,
	  Expressions/BinaryExpressions/NotEqualsExpression.vb,
	  Expressions/BinaryExpressions/LTExpression.vb,
	  Expressions/BinaryExpressions/ModExpression.vb,
	  Expressions/BinaryExpressions/OrExpression.vb,
	  Expressions/BinaryExpressions/AndAlsoExpression.vb,
	  Expressions/BinaryExpressions/MultExpression.vb,
	  Expressions/BinaryExpressions/BinaryExpression.vb,
	  Expressions/BinaryExpressions/RealDivisionExpression.vb,
	  Expressions/InvocationOrIndexExpression.vb,
	  Expressions/DictionaryAccessExpression.vb,
	  Expressions/Classifications/MethodPointerClassification.vb,
	  Expressions/Classifications/VariableClassification.vb,
	  Statements/ForStatement.vb, Statements/ErrorStatement.vb,
	  Statements/AssignStatements/CompoundAssignmentStatement.vb,
	  Statements/DoStatement.vb, Statements/ForEachStatement.vb,
	  Members/PropertyDeclaration.vb, Members/ConstantDeclaration.vb,
	  Members/SubSignature.vb, Members/EventHandlerDeclaration.vb,
	  Members/SubDeclaration.vb, Members/Parameter.vb,
	  Members/ConstructorDeclaration.vb,
	  Members/PropertyGetDeclaration.vb, Members/VariableDeclaration.vb,
	  Members/PropertySetDeclaration.vb, Tokens/IntegralLiteralToken.vb,
	  Types/TokenManager.vb, Types/ImportsClauses.vb,
	  General/TypeResolution.vb: API updates.
	* Expressions/AddressOfExpression.vb: Don't resolve any
	  AddressOfExpression, they're supposed to be resolved by whatever
	  expression/statement they're being assigned to.
	* Expressions/Conversions/ConversionExpression.vb: Add
	  GetTypeConversion that gets the specific type conversion according
	  to the desired type.
	* Expressions/CompilerGeneratedExpression.vb: Add LoadLocalExpression
	  and ValueOnStackExpression.
	* Expressions/MemberAccessExpression.vb: API updates and create fewer
	  temporary lists.
	* Expressions/SimpleNameExpression.vb: Create fewer temporary lists and
	  use indexers instead of enumerators.
	* Expressions/BinaryExpressions/ExponentExpression.vb: This is a power
	  expression, not a mod expression, so emit the powered value, not
	  the modded value.
	* Expressions/ArrayCreationExpression.vb: EmitElementInitializer: If
	  we're initializing an array of structures, load the structure's
	  address.
	* Expressions/ParenthesizedExpression.vb, Statements/IfStatement.vb,
	  Statements/CallStatement.vb, Statements/ThrowStatement.vb,
	  Members/VariableInitializer.vb: Short-circuit resolution.
	* Expressions/Expression.vb: Add missing parts for delegates and
	  AddressOf expressions.
	* Expressions/MethodPointerToValueExpression.vb: Currently commented
	  out.
	* Expressions/DelegateOrObjectCreationExpression.vb: Add better error
	  handling, and resolve delegate expressions according to the new
	  logic.
	* Expressions/Classifications/MethodGroupClassification.vb: Use
	  indexers instead of enumerators.
	* Expressions/Classifications/LateBoundAccessClassification.vb: Start
	  implementing this.
	* Enums/TypeCharacters.vb: Add TypeCharacterToType.
	* Statements/CaseClause.vb: Create type conversions for case clauses.
	* Statements/AssignStatements/AssignmentStatement.vb: Resolve delegates
	  according to new logic.
	* Statements/AssignStatements/MidAssignStatement.vb: Resolve Mid
	  expressions.
	* Statements/AddOrRemoveHandlerStatement.vb: Resolve according to new
	  delegate resolution logic.
	* Statements/WithStatement.vb: Don't use a temporary variable if the
	  with expression is a structure.
	* vbnc.vbproj, Resources/GenerateCodeAndResX.sh: Update.
	* Members/MethodResolver.vb: Implemented better method resolution.
	* Members/RegularEventDeclaration.vb,
	  Members/MemberImplementsClause.vb: Implement event interface
	  implementations.
	* Members/Attribute.vb: Implement module attributes.
	* Members/FunctionSignature.vb: Handle cases where the function name
	  has a type character.
	* Members/Modifiers.vb: Create fewer temporary arrays and lists.
	* Members/InterfaceMemberSpecifier.vb: Resolve event interface
	  implementation.
	* Members/EventDeclaration.vb: Implement overriding of implemented
	  events.
	* Parser/Parser.vb: Create fewer temporary lists.
	* Parser/Parser(Expressions).vb: Hopefully correctly parse unary
	  expressions.
	* Emit/Emitter.vb: Make a few more methods debug only, add some debug
	  info and update calls to Helper.GetTypeCode.
	* Descriptors/GenericTypeDescriptor.vb: Update FullName to correctly
	  handle names of nested types.
	* Descriptors/MethodDescriptor.vb: MustOverride methods can't be final,
	  and implemented events get their corresponding flags as well.
	* Descriptors/TypeDescriptor.vb: IsSubclassOf: everything is a subclass
	  of Object, so special case this. Get*: create fewer lists, and use
	  indexers instead of enumerators.
	* Tokens/Token.vb: Add a few overloads to avoid array creations.
	* Tokens/Span.vb: Make columns shorter and remove EndLine, all errors
	  refer to the same line anyway.
	* Types/TypeNameResolutionInfo.vb: Change resolution to use less
	  temporary lists, arrays and strings.
	* Code/CodeBlock.vb: Implement a few missing Opcodes.Ret cases.
	* Resources/Source.xml, Resources/Errors.resx: Added a few error
	  messages.
	* TypeDeclarations/TypeDeclaration.vb: Short-circuit resolution and
	  create less temporary lists.
	* General/Report.vb: Make ShowMessage a function that returns false if
	  the message is an error and true if it's a warning.
	* General/Helper.vb: Add a Compiler parameter to GetTypeCode, IsEnum.
	  Add CompareNameStart that doesn't allocate any strings. Use
	  indexers instead of enumerators in a few places. API updates.
	  Implement a few missing bits in a variety of methods. Move method
	  resolution to MemberResolver.vb.
	* General/Namespaces.vb: Add IsNamespaceExact and FindNamespace that
	  doesn't create temporary strings.
	* General/Scanner.vb: Number parsing now uses US culture. Accept
	  integer literals greater than Int32.MaxValue (into longs).
	  Correctly implement hex and octal negative values (Extract*
	  methods).
	* General/Namespace.vb: Add Equals that doesn't create any temporary
	  strings.
	* General/TypeCache.vb: Add a few runtime specific types to avoid
	  calling FullName on types (instead do object comparison).
	* General/Index.vb: Use a case-insensitive string comparer, and remove
	  the calls to ToLower.
	* General/TypeConverter.vb: Fix a few result types.
	* General/Compiler.vb: Add VerifyConsistency that crashes if the
	  consistency check fails. API updates.
	* General/TypeManager.vb: Create a cache of types with their names and
	  fullnames, used to check if a specific type has a specific name.
	  Seems to create fewer strings.
	* General/MethodBaseDeclaration.vb: Resolve event overrides. Currently
	  disabled.
	* General/MemberCache.vb: Added LookupFlattenedMembers that doesn't
	  create any temporary lists. Remove use of enumerators.
	* General/MyGenerator.vb: Don't emit any My things if -novbruntimeref
	  is specified. If adding My.Forms, add a reference to SWF.
	* General/Messages.vb: Add a few error messages.
	* Infos/ResolveInfo.vb: Create a default resolveinfo.

2007-04-27  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/TypeManager.vb: Not finding an assembly is a warning, so
	  don't fail.

2007-04-27  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/TypeManager.vb: Not finding an assembly is a warning, so
	  don't fail.

2007-04-23  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/BinaryExpressions/BinaryExpression.vb: Don't use
	  left/rightOperandType to determine intrinsicness, but the true
	  typecode.
	* Statements/IfStatement.vb, Statements/CatchStatement.vb: Use
	  CBoolExpression to emit boolean conversion.
	* Statements/OnErrorStatement.vb, Members/BoundList.vb: Implement
	  ResolveTypeReferences.
	* vbnc.vbproj: Update.
	* Members/VariableDeclaration.vb: It's Strict On that requires variable
	  type, not Explicit On.
	* Descriptors/TypeDescriptor.vb: Implement IsSubclassOf.

2007-04-23  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/Helper.vb: No workaround is necessary for the s390 anymore,
	  remove it.
	* General/MyGenerator.vb: Don't add a Main in MyApplication if a main
	  class is specified using a commandline option. Fixes #74955.

2007-04-18  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Resources/Source.xml, Resources/Errors.resx,
	  TypeDeclarations/PartialTypeDeclaration.vb, General/Message.vb,
	  General/Messages.vb: Add an error message.
	* General/TypeCache.vb: Small fixes.

2007-04-16  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/ArgumentList.vb, Expressions/AddressOfExpression.vb,
	  Expressions/InvocationOrIndexExpression.vb: Provide a small
	  work-around to let AddressOf expression work as a parameter to a
	  method call when there's only one method it can be resolved to.
	* Expressions/SimpleNameExpression.vb: Fix typo.
	* Expressions/BinaryExpressions/LShiftExpression.vb,
	  Expressions/BinaryExpressions/RShiftExpression.vb: Implement proper
	  shifting according to the spec.
	* Expressions/BinaryExpressions/GEExpression.vb,
	  Expressions/BinaryExpressions/LEExpression.vb,
	  Expressions/BinaryExpressions/GTExpression.vb,
	  Expressions/BinaryExpressions/LTExpression.vb: Don't emit boolean
	  conversions like the spec says.
	* Expressions/Classifications/PropertyAccessClassification.vb: Allow a
	  subclass to access non-public properties of the base class. (Patch
	  by Frederik Carlier for #81375).
	* Statements/IfStatement.vb: Add a null-check.
	* Statements/EraseStatement.vb: Resolve any type references.
	* Statements/GotoStatement.vb: A Goto might need into a leave
	  instruction, so call the correct Emitter method.
	* Members/PropertyDeclaration.vb: Add an Init overload.
	* Members/MethodResolver.vb: A starter class that will implement method
	  resolution in the future.
	* Members/Attribute.vb: Resolve() can be called on an attribute several
	  times, so guard against this.
	* Members/FunctionSignature.vb: Return type requiredness is decided by
	  option strict, not option explicit.
	* Members/Attributes.vb: Add a FindAttributes method.
	* Members/MethodDeclaration.vb: Add debug output and fix indentation.
	* Members/ConstructorDeclaration.vb,
	  Descriptors/GenericTypeDescriptor.vb, Types/TypeParameterList.vb,
	  Types/TypeParameter.vb, Code/CodeBlock.vb,
	  TypeDeclarations/AssemblyDeclaration.vb,
	  TypeDeclarations/TypeDeclaration.vb: Add debug output.
	* Members/MemberDeclarations.vb: Partial types only match if they have
	  the same namespace, so fix it.
	* Parser/Parser.vb: Show a warning if Option Strict is Off.
	* Emit/Emitter.vb: Don't set the name of locals if we aren't emitting
	  debug info. Implement switching methods according to the target
	  vbversion. Fix EmitStoreVariable for generic parameters (should
	  emit stobj and not st.ind).
	* Emit/EmitLog.vb: Add a property to get the real ILGenerator.
	* Descriptors/ByRefTypeDescriptor.vb: Implement
	  IsGenericTypeDefinition.
	* Tokens/IntegralLiteralToken.vb: Reimplement IIntegralLiteralToken,
	  this fixes a few parser errors.
	* Types/TypeName.vb: Add a convenience constructor and Init method.
	* TypeDeclarations/ClassDeclaration.vb: Add debug output and implement
	  handling of MyGroupCollectionAttribute.
	* General/CodeFile.vb: It's now possible to create a code file with
	  in-memory code. Used by the My generator to avoid creating a file.
	* General/Helper.vb: Add debug output. Changed emission of methods so
	  that if constrained is not required if the instance expression is a
	  DeRefExpression (ByRef parameter). Change handling of command line
	  arguments to handle the special string handling for defines (the
	  backslashes in _MYTYPE=\"Empty\").
	* General/TypeCache.vb: Add GetType, GetProperty, GetConstructor,
	  GetMethod and GetField that will return nothing if the item to look
	  on is nothing. Necessary since not everything will be loaded always
	  (depends on which assemblies are referenced). Also change the code
	  to use these methods.
	* General/Compiler.vb: Remove IDisposable implementation, it's not
	  needed. Add debug output.
	* General/CommandLine.vb: Add a command line argument -vbversion to set
	  which version of the vb language the compiler should target.
	* General/Define.vb: Add properties to get the define as Boolean,
	  String, Date and Double, and add a Parse () method that parses the
	  defined value.
	* General/MyGenerator.vb: Added, contains the code generation logic for
	  the My namespace.

2007-03-17  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* vbnc.vbproj: Update.
	* Members/Attribute.vb: Implement emission of field and property values
	  for attributes.
	* Members/Parameter.vb: Small refactoring (variable renamed), and call
	  GenerateCode on the attributes, if any.
	* Members/MethodDeclaration.vb: Parameters has code that has to be
	  emitted (attributes), so call GenerateCode on the them.
	* Descriptors/ParameterDescriptor.vb: Small refactoring (variable
	  renamed).
	* Code/CodeBlock.vb: Remove unused code.
	* General/Compiler.vb: Don't emit debug info if requested not to.
	* General/CommandLine.vb: Remove m_bDebugOn and only use m_eDebugInfo.
	  Default debug is none (fixes #81054).

2007-03-15  Rolf Bjarne Kvinge <RKvinge@novell.com> 
	
	* Statements/CallStatement.vb: If a call statement's target is a method group, resolve it like an invocation expression.
	Fixes #81059.

2007-03-15  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Emit/EmitLog.vb: Add an overload so that no conversions occur.

2007-03-15  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/BinaryExpressions/BinaryExpression.vb: When doing operator overloading remove duplicate methods.
	* Expressions/TypeOfExpression.vb: Check classification for this expression.

2007-03-15  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Emit/Emitter.vb: Remove an unnecessary workaround, fixes an endianness issue.

2007-03-09  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/Scanner.vb: Allow for whitespace between the line
	  continuation character and the end of the line. Fixes #81055.

2007-03-08  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/TypeManager.vb: Use our own comparer in the membercache, this
	  avoids the runtime calling into Type.Equals ->
	  Type.UnderlyingSystemType, which causes *Descriptors to be created
	  in some cases (crashes if done before started to emit). Fixes
	  build. Also started slowly working on using Cecil.

2007-03-06  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/Resources.vb: Remove SecondaryPath, it's just wrong.
	* General/CommandLine.vb: Remove SecondaryPath, it's just wrong. Add a
	  small hack for what it was supposed to support in the beginning -
	  the fact that when doing testing within VS, the current directory
	  is set to where the compiler is, not where the test is. Fixes
	  #80967.

2007-03-05  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* vbnc.vbproj: Updated.
	* TypeDeclarations/AssemblyDeclaration.vb: Added FindType, looks for
	  the type with the specified FullName in the assembly.
	* TypeDeclarations/TypeDeclaration.vb: Changed
	  DefaultInstanceConstructor so that the Compiler can access it (when
	  emitting a default Main method). Removed SetMainAttribute, no
	  longer necessary.
	* General/TypeResolution.vb: Removed a couple of unused functions.
	* General/TypeCache.vb: Added SWF.Form, SWF.Application and
	  SWF.Application.Run.
	* General/Compiler.vb: The main function is now set before creating
	  types, this enables us to emit a default Main method for winexe
	  applications. Refactored SetMain () and to create the STAThread
	  attribute here, we now have FindMainClass that looks for the main
	  class set by -main command line argument (if any) and
	  FindMainMethod. Implemented generation of a default Main method for
	  winexe applications. Fixes #81016. Removed error messages in
	  inaccessible code-paths.
	* Types/ContainerType.vb: Deleted, obsolete.

2007-03-05  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Statements/ExitStatement.vb: Handle the select case correctly. Fixes
	  81009#.
	* Types/TypeNameResolutionInfo.vb: Allow for invalid imports.

2007-03-02  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Members/PropertyDeclaration.vb: SetDefaultAttribute is now called
	  after the members are resolved (so that we can check for other
	  members and give correct error messages).
	* Members/Attribute.vb: Added function to get the argument of an
	  attribute.
	* Resources/Source.xml, General/Messages.vb: Added more messages.
	* Resources/Errors.resx: Updated.
	* TypeDeclarations/ClassDeclaration.vb: Break out if any errors.
	* TypeDeclarations/TypeDeclaration.vb: SetDefaultAttribute now checks
	  if the attribute is specified manually and gives the correct error
	  messages.
	* General/Compiler.vb: Break out of compilation if there are any
	  errors.

2007-03-02  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/SimpleNameExpression.vb,
	  Types/ImportsClauses.vb: Skip bad imports (not a fatal
	  error).
	* Statements/ExitStatement.vb: Implemented error checking and
	  the exit statement is now producing correct error messages.
	* Members/EnumMemberDeclaration.vb: Implement a workaround for a
	  mixed Mono/MS bug (the code required to work around an MS bug
	  requires a workaround to work on Mono :)
	* vbnc.rsp, vbnc.vbnc.rsp: Updated to import
	  Microsoft.VisualBasic and reference SWF.dll as well.
	* Resources/Source.xml, Resources/Errors.resx,
	  General/Messages.vb: Added more messages.
	* TypeDeclarations/EnumDeclaration.vb: Only use EnumBuilder on
	  MS.
	* General/TypeResolution.vb: More debug checking.

2007-03-02  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Resources/Source.xml:
	* Resources/Errors.resx:
	* General/Messages.vb: Added message for #30456.

2007-03-02  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/SimpleNameExpression.vb: Small NRE check.
	* Expressions/BinaryExpressions/EqualsExpression.vb: More debug info.
	* vbnc.vbproj, Resources/Errors.resx: Updated.
	* ConditionalCompilation/ConditionalExpression.vb: Removed special
	  casing for previously unimplemented features in the vbruntime.
	* Types/TypeNameResolutionInfo.vb: Propagate IsImportsResolution
	  properly.
	* Types/ImportsNamespaceClause.vb: Show correct warning message if the
	  import isn't found, and return true (since it's a warning, not an
	  error).
	* Resources/Source.xml, General/Messages.vb: Added warning #40056.
	* Resources/GenerateCodeAndResX.sh: Fixed to actually work on Linux.
	* TypeDeclarations/AssemblyDeclaration.vb: If a keyfile is specified on
	  the commandline, it overrides any keyfile in the source. Implement
	  AssemblyVersion for generic versions of the type 1.0.* and 1.0.0.*.
	* General/Scanner.vb: NRE check, fixes #80989.
	* General/AssemblyInfo.vb: Version bump.
	* General/Compiler.vb: Creating the assembly builder can now fail.
	* General/TypeManager.vb: Ifdef out debug information.

2007-02-22  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/MethodGroupToValueExpression.vb: Add more extended debug
	  information.
	* Expressions/Classifications/MethodGroupClassification.vb: Remove
	  debug information.
	* Emit/Emitter.vb: Correct indenting.
	* General/CodeFile.vb: Now encoding defaults to the one specified on
	  the command line (if none, default is based on current locale), but
	  BOMs are detected anyways.
	* General/Helper.vb: Debugging info.
	* General/AssemblyInfo.vb: Version bump.

2007-02-20  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/SimpleNameExpression.vb: Implement resolution of members
	  imported automatically from modules.
	* Statements/UsingStatement.vb: Implement emission of code for using
	  statements with expressions.
	* Descriptors/GenericParameterDescriptor.vb: Implement DefaultValue.
	* General/Helper.vb: Add more info.

2007-02-20  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* General/AssemblyInfo.vb: Version bump.

2007-02-20  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/MethodGroupToValueExpression.vb: Better crash message.
	* Statements/RedimClause.vb: Do some verification.
	* Members/ArraySizeInitializationModifier.vb: Resolve some type
	  references.
	* Members/ArrayElementInitializer.vb: Implement support for
	  initializing multi-dimensional arrays.
	* Tokens/Span.vb: Report relative filename in ToString().
	* General/CodeFile.vb: Add RelativePath, it's the path of the source
	  file that was given to the compiler. Used to show error messages
	  with the same filename as the compiler was given.
	* General/Helper.vb: EmitLoadArrayElement now uses the Get method on
	  the array type instead of the slower Get method on Array.
	* General/CommandLine.vb: Update signature of AddFilesInDir to support
	  CodeFile.RelativePath.
	* General/BaseObject.vb: Create ParentLocationTree, will show the
	  location of all the parents recursively.
	* Emit/Emitter.vb: Ifed out some consistency checking.

2007-02-13  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/AddressOfExpression.vb, Expressions/GetRefExpression.vb,
	  General/Helper.vb: Make the crashes give more information.
	* Expressions/SimpleNameExpression.vb: Properties in implicit modules
	  can now be accessed correctly.
	* Expressions/Expression.vb: If getting the object reference of a
	  deref'ed value type, return the original deref'ed value type (which
	  should be a byref type, so this is ok).
	* Expressions/DeRefExpression.vb: Make the base expression publicly
	  available.
	* Expressions/DelegateOrObjectCreationExpression.vb: Only resolve the
	  argument list as a delegete argument list if it actually is a
	  delegate creation.
	* Members/PropertyDeclaration.vb: Add a call to MyBase.GenerateCode, so
	  that attributes are emitted correctly.
	* Members/ArrayElementInitializer.vb: Another check for 0 elements to
	  emit.
	* General/CommandLine.vb: Ignore any exceptions when trying to write
	  vbnc.rsp (might happen if the user doesn't have write permissions
	  to the directory where vbnc.exe resides).

2007-02-13  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* Expressions/ArgumentList.vb, Members/MethodDeclaration.vb,
	  Code/CodeBlock.vb, TypeDeclarations/AssemblyDeclaration.vb:
	  Commented out a wrong assert.
	* Expressions/Conversions/CSByteExpression.vb,
	  Expressions/Conversions/CSngExpression.vb,
	  Expressions/Conversions/CIntExpression.vb,
	  Expressions/Conversions/CBoolExpression.vb,
	  Expressions/Conversions/CShortExpression.vb,
	  Expressions/Conversions/CDblExpression.vb,
	  Expressions/Conversions/CByteExpression.vb,
	  Expressions/Conversions/CULngExpression.vb,
	  Expressions/Conversions/CStrExpression.vb,
	  Expressions/Conversions/CObjExpression.vb,
	  Expressions/Conversions/CCharExpression.vb,
	  Expressions/Conversions/CDateExpression.vb,
	  Expressions/Conversions/CUIntExpression.vb,
	  Expressions/Conversions/CLngExpression.vb,
	  Expressions/Conversions/CTypeExpression.vb,
	  Expressions/Conversions/CUShortExpression.vb: Validate conversion
	  during the resolution phase.
	* Expressions/Conversions/CDecExpression.vb: Validate conversion during
	  the resolution phase. Add special handling for loading decimal
	  constants in a way that looks like a MS bug.
	* Expressions/SimpleNameExpression.vb: In GetMeClassification check if
	  the parent is a TypeDeclaration for fields. Fixes #80752.
	* Expressions/BinaryExpressions/EqualsExpression.vb,
	  ConditionalCompilation/ConditionalCompilation.vb: Add more debug
	  info.
	* Expressions/InvocationOrIndexExpression.vb,
	  Members/FunctionSignature.vb, Members/Parameter.vb,
	  Members/VariableDeclaration.vb, Names/QualifiedIdentifier.vb,
	  Types/TypeName.vb, General/MethodBaseDeclaration.vb: Shortcircuit
	  resolution if something fails.
	* Statements/RaiseEventStatement.vb: Override ResolveTypeReferences.
	* vbnc.vbproj: Updated.
	* Emit/Emitter.vb: Small fix to the emission stack.
	* ConditionalCompilation/ConditionalExpression.vb: Simplify code a bit
	  using the vbruntime for a few cases. Add a couple of special cases
	  since our vbruntime doesn't have support yet for the necessary
	  functions required to boot the compiler.
	* Types/TypeNameResolutionInfo.vb: Shortcircuit resolution if something
	  fails. Now shows VBNC30451 correctly.
	* Resources/GenerateCodeAndResX.bat, Resources/GenerateCodeAndResX.sh:
	  A script to generate Messages.vb and Errors.resx from Source.xml
	* Resources/Errors.resx: Add an error message for error # 30451.
	* General/CodeFile.vb: Don't try to parse the file as UTF8 by default
	  (fixes #80750). This has to be done some other way though.
	* General/Report.vb: Remove unused method.
	* General/Helper.vb: Add a function to enable debug output with
	  environment variables.
	* General/AssemblyInfo.vb: Update version.
	* General/TypeResolution.vb: Implement for cases for type conversions.
	* General/TypeConverter.vb: Add a method to get the error # (if any)
	  for a specified conversion
	* General/Compiler.vb: Fix testoutput path.
	* General/CommandLine.vb: More debug information.
	* General/Messages.vb: Add message for error #30451.

2007-02-01  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* Scanner.vb: The scanner now scans reads characters in files one by one instead of loading the entire source file into memory at once.
	* GenericTypeDescriptor.vb: Use StringBuilder instead of concatenation to use less strings.
	* ArrayTypeDescriptor.vb: Cache FullName to avoid calculating it several times.
	* Conditional*.vb: Implement support for ConditionalAttribute. A copy of all the constants are now created every time a constant changes (so that we know what the constant was later on when we handle ConditionalAttributes). Fixed bug when conditional constants are in an excluded code-region.
	* TypeNameResolutionInfo.vb: Create less strings and temporary objects.
	* CodeFile.vb: Implement support for ConditionalAttribute.
	* Helper.vb: A few more special cases for IsEnum to avoid getting the FullName of the type. Add the ConditionalAttribute to all the Assert* calls.
	* TypeCache.vb: Only load methods from a class if the class was successfully loaded (quite a few methods are still missing this check).
	
